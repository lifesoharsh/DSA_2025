class Solution {
public:
    bool bsearch(vector<int>& arr,int target){
        int start = 0, end = arr.size()-1;

        while(start <= end){
            int mid = start + (end-start)/2;
            if(arr[mid] == target) return true;
            else if(target >= arr[mid]) start = mid+1;
            else end = mid-1;
        }
        return false;
    }

    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int srow = 0, erow = matrix.size()-1;
        int n = matrix[0].size();

        while(srow <= erow){
            int mrow = srow + (erow-srow)/2;
            if(matrix[mrow][0] <= target && target <= matrix[mrow][n-1]){
                return bsearch(matrix[mrow],target);
            }
            else if(target <= matrix[mrow][0]) erow = mrow-1;
            else srow = mrow+1;
        }

        return false;
    }
};
