class Solution {
public:
    bool isSafe(vector<vector<char>>& board, int row, int col, char val){
        for(int j = 0; j < 9; j++){
            if(board[row][j] == val) return false;
        }
        for(int i = 0; i < 9; i++){
            if(board[i][col] == val) return false;
        }

        int srow = (row/3) * 3;
        int scol = (col/3) * 3;

        for(int i = srow; i <= srow+2; i++){
            for(int j = scol; j <= scol+2; j++){
                if(board[i][j] == val) return false;
            }
        }

        return true;
    }

    bool sudoku(vector<vector<char>>& board, int row, int col){
        if(row == 9) return true;
        int nextRow = row, nextCol = col+1;

        if(nextCol == 9){
            nextRow = row + 1;
            nextCol = 0;
        }
        if(board[row][col] != '.'){
           return sudoku(board,nextRow,nextCol);
        }
        else{
             for(char i = '1'; i <= '9'; i++){
                if(isSafe(board,row,col,i)){
                    board[row][col] = i;
                    if(sudoku(board, nextRow, nextCol)) return true;
                    board[row][col] = '.';
                }
            }
        }
        return false;
    }

    void solveSudoku(vector<vector<char>>& board) {
        sudoku(board,0,0);
    }
};
