class Solution {
public:

    ListNode* split(ListNode* head){
        ListNode* fast = head;
        ListNode* slow = head;
        ListNode* temp;

        while(fast && fast->next){
            fast = fast->next->next;
            if(fast) slow = slow->next;
        }

        temp = slow->next;
        slow->next = nullptr;
        return temp;
    }

    ListNode* merge(ListNode* first, ListNode* second){
        if(!first) return second;
        if(!second) return first;

        if(first->val < second->val){
            first->next = merge(first->next, second);
            return first; 
        }
        else{
            second->next = merge(first, second->next);
            return second;
        }
    }

    ListNode* sortList(ListNode* head) {

        if(!head || !head->next) return head;
        ListNode* second = split(head);
        head = sortList(head);
        second = sortList(second);

        return merge(head, second);
    }
};
