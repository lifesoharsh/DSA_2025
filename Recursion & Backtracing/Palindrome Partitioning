class Solution {
public:
    bool isPalindrome(string& part){
        int i = 0, j = part.size()-1;

        while(i < j){
            if(part[i] != part[j]) return false;
            i++;
            j--;
        } 
        return true;
    }
    void partitions(string s, vector<vector<string>>& ans,vector<string>& parts){
        if(s == ""){
            ans.push_back(parts);
            return;
        }
        for(int i  = 0; i < s.length(); i++){
            string part = s.substr(0, i+1);

            if(isPalindrome(part)){
                parts.push_back(part);
                partitions(s.substr(i+1),ans,parts);
                parts.pop_back();
            }
        }

    }
    vector<vector<string>> partition(string s) {
        vector<vector<string>> ans;
        vector<string> parts;
        partitions(s,ans,parts);
        return ans;
    }
};
