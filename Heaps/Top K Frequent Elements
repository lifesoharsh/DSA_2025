class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        if(k == nums.size()) return nums;

        unordered_map<int, int> freq;
        vector<int> ans;

        for(int i:nums) freq[i]++;

        auto cmp = [&freq](auto& a, auto& b){
            return freq[a] > freq[b];
        };

        priority_queue<int, vector<int>, decltype(cmp)> pq(cmp);

        for(auto& [n,_]: freq){
            pq.push(n);
            if(pq.size() > k) pq.pop();
        }

        while(!pq.empty()){
            ans.push_back(pq.top());
            pq.pop();
        }

        return ans;
    }
};
