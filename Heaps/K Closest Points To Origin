class Solution {
public:
    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {
        vector<vector<int>> ans;
        priority_queue<vector<int>, vector<vector<int>>> cp;
        int distance;

        for(auto& idx: points){
            int x = idx[0];
            int y = idx[1];
            distance = x*x + y*y;
            
            cp.push({distance, x, y});
            if(cp.size() > k) cp.pop();
        }

        while(!cp.empty()){
            auto& arr = cp.top();
            ans.push_back({arr[1], arr[2]});
            cp.pop();
        }

        return ans;
    }
};
