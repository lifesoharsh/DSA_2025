class Solution {
public:
    vector<int> getFinalState(vector<int>& nums, int k, int multiplier) {
        auto cmp = [](auto& a, auto& b){
            if(a.first != b.first) return a.first > b.first;
            else return a.second > b.second;
        };
        priority_queue<pair<int,int>, vector<pair<int,int>>, decltype(cmp)> pq;

        for(int i = 0; i < nums.size(); i++) pq.push({nums[i], i});

        for(int i = 0; i < k; i++){
            auto minm = pq.top();
            pq.pop();
            nums[minm.second] = minm.first*multiplier;
            pq.push({nums[minm.second], minm.second});
        }

        return nums;
    }
};
