/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        if(!list1) return list2;
        if(!list2) return list1;
        ListNode* curr1 = new ListNode(0, list1);
        ListNode* temp1 = nullptr;
        ListNode* temp2 = nullptr;
        while(curr1->next && list2){
            if(curr1->next->val <= list2->val) curr1 = curr1->next;
            else{
                if(curr1->next == list1) list1 = list2;
                temp1 = curr1->next;
                temp2 = list2->next;
                curr1->next = list2;
                list2->next = temp1;
                curr1 = curr1->next;
                list2 = temp2;
            }
        }
        if(list2)curr1->next = list2;
        return list1;
    }
};
