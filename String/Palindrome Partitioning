class Solution {
public:
    bool isPalindrome(string& s, int start, int end){
        if(start == end) return true;
        int i = start, j = end;
        while(i < j){
            if(s[i] != s[j]) return false;
            i++;
            j--;
        } 
        return true;
    }
    void partitions(string& s, vector<vector<string>>& ans,vector<string>& parts, int idx){
        if(idx == s.length()){
            ans.push_back(parts);
            return;
        }
        for(int i  = idx; i < s.length(); i++){
            if(isPalindrome(s,idx,i)){
                string str = s.substr(idx, i-idx+1);
                parts.push_back(str);
                partitions(s,ans,parts,i+1);
                parts.pop_back();
            }
        }

    }
    vector<vector<string>> partition(string s) {
        vector<vector<string>> ans;
        vector<string> parts;
        partitions(s,ans,parts,0);
        return ans;
    }
};
